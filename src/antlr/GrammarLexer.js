// Generated from Grammar.g by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,20,119,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,5,
1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,
1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,
1,15,1,15,1,16,1,16,1,16,1,17,4,17,99,8,17,11,17,12,17,100,1,17,1,17,4,17,
105,8,17,11,17,12,17,106,3,17,109,8,17,1,18,4,18,112,8,18,11,18,12,18,113,
1,19,1,19,1,19,1,19,0,0,20,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,1,0,3,1,0,48,
57,2,0,65,90,97,122,3,0,9,10,13,13,32,32,122,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,
17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
1,0,0,0,1,41,1,0,0,0,3,43,1,0,0,0,5,47,1,0,0,0,7,49,1,0,0,0,9,56,1,0,0,0,
11,58,1,0,0,0,13,61,1,0,0,0,15,66,1,0,0,0,17,71,1,0,0,0,19,77,1,0,0,0,21,
79,1,0,0,0,23,81,1,0,0,0,25,83,1,0,0,0,27,85,1,0,0,0,29,88,1,0,0,0,31,91,
1,0,0,0,33,94,1,0,0,0,35,98,1,0,0,0,37,111,1,0,0,0,39,115,1,0,0,0,41,42,
5,59,0,0,42,2,1,0,0,0,43,44,5,118,0,0,44,45,5,97,0,0,45,46,5,114,0,0,46,
4,1,0,0,0,47,48,5,61,0,0,48,6,1,0,0,0,49,50,5,112,0,0,50,51,5,114,0,0,51,
52,5,105,0,0,52,53,5,110,0,0,53,54,5,116,0,0,54,55,5,40,0,0,55,8,1,0,0,0,
56,57,5,41,0,0,57,10,1,0,0,0,58,59,5,105,0,0,59,60,5,102,0,0,60,12,1,0,0,
0,61,62,5,116,0,0,62,63,5,104,0,0,63,64,5,101,0,0,64,65,5,110,0,0,65,14,
1,0,0,0,66,67,5,101,0,0,67,68,5,108,0,0,68,69,5,115,0,0,69,70,5,101,0,0,
70,16,1,0,0,0,71,72,5,101,0,0,72,73,5,110,0,0,73,74,5,100,0,0,74,75,5,105,
0,0,75,76,5,102,0,0,76,18,1,0,0,0,77,78,5,43,0,0,78,20,1,0,0,0,79,80,5,45,
0,0,80,22,1,0,0,0,81,82,5,62,0,0,82,24,1,0,0,0,83,84,5,60,0,0,84,26,1,0,
0,0,85,86,5,62,0,0,86,87,5,61,0,0,87,28,1,0,0,0,88,89,5,60,0,0,89,90,5,61,
0,0,90,30,1,0,0,0,91,92,5,61,0,0,92,93,5,61,0,0,93,32,1,0,0,0,94,95,5,33,
0,0,95,96,5,61,0,0,96,34,1,0,0,0,97,99,7,0,0,0,98,97,1,0,0,0,99,100,1,0,
0,0,100,98,1,0,0,0,100,101,1,0,0,0,101,108,1,0,0,0,102,104,5,46,0,0,103,
105,7,0,0,0,104,103,1,0,0,0,105,106,1,0,0,0,106,104,1,0,0,0,106,107,1,0,
0,0,107,109,1,0,0,0,108,102,1,0,0,0,108,109,1,0,0,0,109,36,1,0,0,0,110,112,
7,1,0,0,111,110,1,0,0,0,112,113,1,0,0,0,113,111,1,0,0,0,113,114,1,0,0,0,
114,38,1,0,0,0,115,116,7,2,0,0,116,117,1,0,0,0,117,118,6,19,0,0,118,40,1,
0,0,0,5,0,100,106,108,113,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class GrammarLexer extends antlr4.Lexer {

    static grammarFileName = "Grammar.g";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "';'", "'var'", "'='", "'print('", "')'", 
                         "'if'", "'then'", "'else'", "'endif'", "'+'", "'-'", 
                         "'>'", "'<'", "'>='", "'<='", "'=='", "'!='" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, "NB", "IDENT", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "NB", "IDENT", 
                      "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

GrammarLexer.EOF = antlr4.Token.EOF;
GrammarLexer.T__0 = 1;
GrammarLexer.T__1 = 2;
GrammarLexer.T__2 = 3;
GrammarLexer.T__3 = 4;
GrammarLexer.T__4 = 5;
GrammarLexer.T__5 = 6;
GrammarLexer.T__6 = 7;
GrammarLexer.T__7 = 8;
GrammarLexer.T__8 = 9;
GrammarLexer.T__9 = 10;
GrammarLexer.T__10 = 11;
GrammarLexer.T__11 = 12;
GrammarLexer.T__12 = 13;
GrammarLexer.T__13 = 14;
GrammarLexer.T__14 = 15;
GrammarLexer.T__15 = 16;
GrammarLexer.T__16 = 17;
GrammarLexer.NB = 18;
GrammarLexer.IDENT = 19;
GrammarLexer.WS = 20;



